<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<context:annotation-config />
		
	<!-- 该 BeanPostProcessor 将自动对标注 @Autowired 的 Bean 进行注入 -->
	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
 	
  <!-- 数据库连接的配置放到hibernate.cfg.xml中去了 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="configLocation" value="classpath:hibernate.cfg.xml" />
        <!-- 配置sessionFactory扫描models包下的所有类。 -->
        <property name="packagesToScan" value="com.hongmeng.is.common.bo" />
    </bean>
    <bean id="transactionManager"
        class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
     
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 将所有的get前缀和find前缀的查询，如果有事务则以当前事务提交，没有事务就以非事务方式提交查询
                 并且查询结果设定为只读 -->
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <!-- 除get和find前缀的方法外，全部按照事务方式提交查询，并且设置结果非只读 -->
            <tx:method name="*"  propagation="REQUIRED" read-only="false" />
        </tx:attributes>
    </tx:advice>
    <!-- 下面的dao访问切片设置进行事务管理和dao类前面的@Transactional注解是否全是必须添加未进行验证，稳妥起见就都加上了。 -->
    <!-- 
    <aop:config expose-proxy="true">
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.hongmeng.services..*(..))" />
    </aop:config>
      -->
    <aop:aspectj-autoproxy proxy-target-class="true" />
     
    <tx:annotation-driven />
    
    <context:component-scan base-package="com.hongmeng.is">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />  
    </context:component-scan>
    
</beans>
